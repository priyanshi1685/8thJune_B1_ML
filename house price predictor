{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np \n",
    "import matplotlib.pyplot as plt \n",
    "import seaborn as sns \n",
    "import sklearn as skl \n",
    "import tkinter as tk\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "m=pd.read_pickle(\"C:\\Users\\Asus\\Desktop\\projects\\house_price_predictor.pkl\")\n",
    "\n",
    "app=tk.Tk()\n",
    "app.geometry('450x300')\n",
    "app.title('Price Predictor')\n",
    "\n",
    "bg=tk.PhotoImage(file='bg.png')\n",
    "bg=bg.subsample(2)\n",
    "\n",
    "canvas1=tk.Canvas(app,width=450,height=300)\n",
    "canvas1.pack(fill='both',expand=True)\n",
    "canvas1.create_image(0,0,image=bg,anchor='nw')\n",
    "\n",
    "canvas1.create_text(220,10,text='House Pricing')\n",
    "\n",
    "def Predict():\n",
    "    inco=eval(Entry_Inc.get())\n",
    "    age=eval(Entry_Age.get())\n",
    "    room=eval(Entry_Rooms.get())\n",
    "    pop=eval(Entry_Population.get())\n",
    "    quary=pd.DataFrame({'Income':[inco],'House_Age':[age],'Rooms':[room],'Population':[pop]})\n",
    "    result.set(round(m.predict(quary)[0],2))\n",
    "    \n",
    "inc=canvas1.create_text(100,60,anchor='nw',text='Enter Your Income')   \n",
    "\n",
    "\n",
    "Age=canvas1.create_text(100,80,anchor='nw',text='Enter The Age Of Your House')\n",
    "\n",
    "Rooms=canvas1.create_text(100,100,anchor='nw',text='Enter The Number OF Rooms')\n",
    "\n",
    "\n",
    "Population=canvas1.create_text(100,120,anchor='nw',text='Enter The Population \\n In Your Area \\n (Estimated)')\n",
    "\n",
    "Entry_Inc=tk.Variable(app)\n",
    "tk.Entry(app,textvariable=Entry_Inc).place(x=260,y=60,height=20)\n",
    "\n",
    "Entry_Age=tk.Variable(app)\n",
    "tk.Entry(app,textvariable=Entry_Age).place(x=260,y=80,height=20)\n",
    "\n",
    "Entry_Rooms=tk.Variable(app)\n",
    "tk.Entry(app,textvariable=Entry_Rooms).place(x=260,y=100,height=20)\n",
    "\n",
    "Entry_Population=tk.Variable(app)\n",
    "tk.Entry(app,textvariable=Entry_Population).place(x=260,y=120,height=20)\n",
    "\n",
    "tk.Button(app,text='Predict Price Of House',command=Predict,bg='light yellow').place(x=260,y=220,height=20)\n",
    "\n",
    "Predicted_Price=tk.Variable(app)\n",
    "Predicted_Price.set('The Predicted Price \\n OF Your House \\n ($)')\n",
    "tk.Label(app,textvariable=Predicted_Price).place(x=100,y=250)\n",
    "\n",
    "result=tk.Variable(app)\n",
    "result.set('')\n",
    "tk.Entry(app,textvariable=result).place(x=260,y=257,height=20)\n",
    "#for displaying other elements present we use window function for canvas\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "app.mainloop()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
